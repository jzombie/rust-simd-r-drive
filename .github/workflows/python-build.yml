name: Build Python Wheels

on:
  push:
    paths:
      - "bindings/python/**"
  pull_request:
    paths:
      - "bindings/python/**"

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tooling from requirements.txt
        run: |
          pip install -r bindings/python/requirements.txt
          pip install -r bindings/python/requirements-dev.txt

      - name: Build wheels
        env:
          CIBW_SKIP: "cp36-* cp37-* cp38-* cp39-* pp* *-manylinux_i686 *-musllinux_*"
        run: cibuildwheel bindings/python --output-dir bindings/python/dist

      - name: Install built wheel and run tests
        shell: bash
        run: |
          # Find a matching wheel in dist/
          WHEEL=$(find bindings/python/dist -name "*.whl" | head -n1)
          if [[ -z "$WHEEL" ]]; then
            echo "‚ùå No wheel found in dist/"
            exit 1
          fi

          # Install the wheel using the current Python
          python -m pip install "$WHEEL"

          # Show import paths for debugging
          python -m site

          # Run tests with pytest (assumes it's in requirements-dev.txt)
          pytest bindings/python/tests --import-mode=importlib

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: simd_r_drive_py-wheels-${{ matrix.os }}
          path: bindings/python/dist/*.whl
